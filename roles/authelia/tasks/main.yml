---
- name: Check if the authelia config exists
  stat:
    path: "{{ docker_dir }}/authelia/configuration.yml"
  register: config_exists

- name: Generate the secrets
  set_fact:
    jwt_secret: "{{ lookup('community.general.random_string', special=false, length=21) }}"
    session_secret: "{{ lookup('community.general.random_string', special=false, length=21) }}"
    storage_encryption_key: "{{ lookup('community.general.random_string', special=false, length=21) }}"
  when: not config_exists.stat.exists

- name: Create the config folder
  file:
    path: "{{ docker_dir }}/authelia"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Copy the main config
  template:
    src: configuration.yml.j2
    dest: "{{ docker_dir }}/authelia/configuration.yml"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0644
  when: not config_exists.stat.exists

- name: Copy the users database
  template:
    src: users_database.yml.j2
    dest: "{{ docker_dir }}/authelia/users_database.yml"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0644

- name: Make sure the Redis container is created and running
  docker_container:
    name: "redis"
    image: "redis:alpine"
    networks:
      - name: wg_network
    pull: yes
    state: "started"
    restart_policy: unless-stopped

- name: Make sure the Authelia container is created and running
  docker_container:
    name: "authelia"
    image: "authelia/authelia"
    networks:
      - name: wg_network
    pull: yes
    state: "started"
    volumes:
      - "{{ docker_dir }}/authelia:/config"
    restart_policy: unless-stopped
